/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ejercicioevaluable1;

import Ficheros.OperacionesFicheros;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author alumno
 */
public class Interfaz extends javax.swing.JFrame {

    private Vector listaNombres = new Vector();
    private ArrayList<Venta> listaVentas = new ArrayList<Venta>();
    private ArrayList<Venta> ventasEncontradas = new ArrayList<Venta>();
    private int encontrada = 0;
    private String fichero = "ventas.dat";

    /**
     * Creates new form Interfaz
     */
    public Interfaz() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroupProcesador = new javax.swing.ButtonGroup();
        buttonGroupMemoria = new javax.swing.ButtonGroup();
        buttonGroupMonitor = new javax.swing.ButtonGroup();
        buttonGroupDisco = new javax.swing.ButtonGroup();
        jLabelNombreCl = new javax.swing.JLabel();
        jTextFieldNombreCl = new javax.swing.JTextField();
        jLabelLocalidad = new javax.swing.JLabel();
        jComboBoxLocalidad = new javax.swing.JComboBox();
        jLabelListaCl = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        JListClientes = new javax.swing.JList();
        jLabelProcesador = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jRadioButtonIntel = new javax.swing.JRadioButton();
        jRadioButtonAmdR = new javax.swing.JRadioButton();
        jRadioButtonAmdR2 = new javax.swing.JRadioButton();
        jRadioButtonAmdR3 = new javax.swing.JRadioButton();
        jRadioButton8GB = new javax.swing.JRadioButton();
        jRadioButton16GB = new javax.swing.JRadioButton();
        jRadioButton32GB = new javax.swing.JRadioButton();
        jRadioButton64GB = new javax.swing.JRadioButton();
        jRadioButton15 = new javax.swing.JRadioButton();
        jRadioButton17 = new javax.swing.JRadioButton();
        jRadioButton13 = new javax.swing.JRadioButton();
        jRadioButton24 = new javax.swing.JRadioButton();
        jRadioButton1TB = new javax.swing.JRadioButton();
        jRadioButton1TBSSD = new javax.swing.JRadioButton();
        jRadioButton2TB = new javax.swing.JRadioButton();
        jRadioButton2TBSSD = new javax.swing.JRadioButton();
        jCheckBoxWin = new javax.swing.JCheckBox();
        jCheckBoxDvd = new javax.swing.JCheckBox();
        jCheckBoxwifi = new javax.swing.JCheckBox();
        jCheckBoxback = new javax.swing.JCheckBox();
        jButtonAniadir = new javax.swing.JButton();
        jButtonBuscar = new javax.swing.JButton();
        jButtonEliminar = new javax.swing.JButton();
        jButtonCancelar = new javax.swing.JButton();
        jButtonSalir = new javax.swing.JButton();
        BotonUltimo = new javax.swing.JButton();
        BotonSiguiente = new javax.swing.JButton();
        BotonAnterior = new javax.swing.JButton();
        BotonPrimero = new javax.swing.JButton();
        jButtonMostrarFichero = new javax.swing.JButton();
        jButtonGuardarFichero = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabelNombreCl.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        jLabelNombreCl.setText("Nombre del cliente: ");
        getContentPane().add(jLabelNombreCl, new org.netbeans.lib.awtextra.AbsoluteConstraints(29, 24, -1, -1));

        jTextFieldNombreCl.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextFieldNombreClKeyPressed(evt);
            }
        });
        getContentPane().add(jTextFieldNombreCl, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 20, 142, -1));

        jLabelLocalidad.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        jLabelLocalidad.setText("Localidad");
        getContentPane().add(jLabelLocalidad, new org.netbeans.lib.awtextra.AbsoluteConstraints(29, 60, -1, -1));

        jComboBoxLocalidad.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        jComboBoxLocalidad.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Villalba", "Alpedrete", "Galapagar", "Guadarrama", "Moralzarzal", "" }));
        jComboBoxLocalidad.setEnabled(false);
        jComboBoxLocalidad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxLocalidadActionPerformed(evt);
            }
        });
        getContentPane().add(jComboBoxLocalidad, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 55, 142, -1));

        jLabelListaCl.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        jLabelListaCl.setText("Lista de clientes: ");
        getContentPane().add(jLabelListaCl, new org.netbeans.lib.awtextra.AbsoluteConstraints(354, 24, -1, -1));

        JListClientes.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        JListClientes.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                JListClientesFocusGained(evt);
            }
        });
        JListClientes.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                JListClientesMouseClicked(evt);
            }
        });
        JListClientes.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                JListClientesKeyReleased(evt);
            }
        });
        jScrollPane1.setViewportView(JListClientes);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(476, 20, 230, 97));

        jLabelProcesador.setText("Procesador");
        getContentPane().add(jLabelProcesador, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 130, -1, -1));

        jLabel1.setText("Memoria");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 130, 72, -1));

        jLabel2.setText("Monitor");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 130, -1, -1));

        jLabel3.setText("Disco duro");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 130, -1, -1));

        jLabel4.setText("Opciones");
        jLabel4.setToolTipText("");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 130, -1, -1));

        buttonGroupProcesador.add(jRadioButtonIntel);
        jRadioButtonIntel.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        jRadioButtonIntel.setText("Intel Pentium G5400");
        jRadioButtonIntel.setToolTipText("");
        jRadioButtonIntel.setEnabled(false);
        getContentPane().add(jRadioButtonIntel, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 150, -1, -1));

        buttonGroupProcesador.add(jRadioButtonAmdR);
        jRadioButtonAmdR.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        jRadioButtonAmdR.setSelected(true);
        jRadioButtonAmdR.setText("AMD Ryzen 3 2200G");
        jRadioButtonAmdR.setEnabled(false);
        getContentPane().add(jRadioButtonAmdR, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 180, -1, -1));

        buttonGroupProcesador.add(jRadioButtonAmdR2);
        jRadioButtonAmdR2.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        jRadioButtonAmdR2.setText("AMD Ryzen 5 2400G");
        jRadioButtonAmdR2.setEnabled(false);
        getContentPane().add(jRadioButtonAmdR2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 210, -1, -1));

        buttonGroupProcesador.add(jRadioButtonAmdR3);
        jRadioButtonAmdR3.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        jRadioButtonAmdR3.setText("AMD Ryzen 3 1200");
        jRadioButtonAmdR3.setEnabled(false);
        getContentPane().add(jRadioButtonAmdR3, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 240, -1, -1));

        buttonGroupMemoria.add(jRadioButton8GB);
        jRadioButton8GB.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        jRadioButton8GB.setText("8 GB RAM");
        jRadioButton8GB.setEnabled(false);
        getContentPane().add(jRadioButton8GB, new org.netbeans.lib.awtextra.AbsoluteConstraints(199, 151, -1, -1));

        buttonGroupMemoria.add(jRadioButton16GB);
        jRadioButton16GB.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        jRadioButton16GB.setText("16 GB RAM");
        jRadioButton16GB.setEnabled(false);
        getContentPane().add(jRadioButton16GB, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 180, -1, -1));

        buttonGroupMemoria.add(jRadioButton32GB);
        jRadioButton32GB.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        jRadioButton32GB.setText("32 GB RAM");
        jRadioButton32GB.setEnabled(false);
        getContentPane().add(jRadioButton32GB, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 210, -1, -1));

        buttonGroupMemoria.add(jRadioButton64GB);
        jRadioButton64GB.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        jRadioButton64GB.setSelected(true);
        jRadioButton64GB.setText("64 GB RAM");
        jRadioButton64GB.setEnabled(false);
        getContentPane().add(jRadioButton64GB, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 240, -1, -1));

        buttonGroupMonitor.add(jRadioButton15);
        jRadioButton15.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        jRadioButton15.setText("15 ''");
        jRadioButton15.setEnabled(false);
        getContentPane().add(jRadioButton15, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 150, -1, -1));

        buttonGroupMonitor.add(jRadioButton17);
        jRadioButton17.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        jRadioButton17.setText("17''");
        jRadioButton17.setEnabled(false);
        getContentPane().add(jRadioButton17, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 180, -1, -1));

        buttonGroupMonitor.add(jRadioButton13);
        jRadioButton13.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        jRadioButton13.setText("13''");
        jRadioButton13.setEnabled(false);
        getContentPane().add(jRadioButton13, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 210, -1, -1));

        buttonGroupMonitor.add(jRadioButton24);
        jRadioButton24.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        jRadioButton24.setSelected(true);
        jRadioButton24.setText("24''");
        jRadioButton24.setEnabled(false);
        getContentPane().add(jRadioButton24, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 240, -1, -1));

        buttonGroupDisco.add(jRadioButton1TB);
        jRadioButton1TB.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        jRadioButton1TB.setText(" 1TB ");
        jRadioButton1TB.setEnabled(false);
        getContentPane().add(jRadioButton1TB, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 150, -1, -1));

        buttonGroupDisco.add(jRadioButton1TBSSD);
        jRadioButton1TBSSD.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        jRadioButton1TBSSD.setText("1TB + 128 GB SSD");
        jRadioButton1TBSSD.setEnabled(false);
        getContentPane().add(jRadioButton1TBSSD, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 180, 162, -1));

        buttonGroupDisco.add(jRadioButton2TB);
        jRadioButton2TB.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        jRadioButton2TB.setText("2 TB");
        jRadioButton2TB.setEnabled(false);
        getContentPane().add(jRadioButton2TB, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 210, -1, -1));

        buttonGroupDisco.add(jRadioButton2TBSSD);
        jRadioButton2TBSSD.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        jRadioButton2TBSSD.setSelected(true);
        jRadioButton2TBSSD.setText("2 TB + 128 SSD");
        jRadioButton2TBSSD.setEnabled(false);
        getContentPane().add(jRadioButton2TBSSD, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 240, -1, -1));

        jCheckBoxWin.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        jCheckBoxWin.setSelected(true);
        jCheckBoxWin.setText("Windows 10");
        jCheckBoxWin.setActionCommand("");
        jCheckBoxWin.setEnabled(false);
        getContentPane().add(jCheckBoxWin, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 157, -1, -1));

        jCheckBoxDvd.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        jCheckBoxDvd.setSelected(true);
        jCheckBoxDvd.setText("LectorDVD");
        jCheckBoxDvd.setEnabled(false);
        getContentPane().add(jCheckBoxDvd, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 187, -1, -1));

        jCheckBoxwifi.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        jCheckBoxwifi.setText("WiFi");
        jCheckBoxwifi.setEnabled(false);
        getContentPane().add(jCheckBoxwifi, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 217, -1, -1));

        jCheckBoxback.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        jCheckBoxback.setText("Backup/Restore");
        jCheckBoxback.setEnabled(false);
        getContentPane().add(jCheckBoxback, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 247, 130, -1));

        jButtonAniadir.setMnemonic('a');
        jButtonAniadir.setText("Añadir");
        jButtonAniadir.setEnabled(false);
        jButtonAniadir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAniadirActionPerformed(evt);
            }
        });
        getContentPane().add(jButtonAniadir, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 330, 90, -1));

        jButtonBuscar.setMnemonic('b');
        jButtonBuscar.setText("Buscar");
        jButtonBuscar.setEnabled(false);
        jButtonBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonBuscarActionPerformed(evt);
            }
        });
        getContentPane().add(jButtonBuscar, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 330, 90, -1));

        jButtonEliminar.setMnemonic('e');
        jButtonEliminar.setText("Eliminar");
        jButtonEliminar.setEnabled(false);
        jButtonEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEliminarActionPerformed(evt);
            }
        });
        getContentPane().add(jButtonEliminar, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 330, 100, -1));

        jButtonCancelar.setMnemonic('c');
        jButtonCancelar.setText("Cancelar");
        jButtonCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCancelarActionPerformed(evt);
            }
        });
        getContentPane().add(jButtonCancelar, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 289, -1, -1));

        jButtonSalir.setMnemonic('s');
        jButtonSalir.setText("Salir");
        jButtonSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSalirActionPerformed(evt);
            }
        });
        getContentPane().add(jButtonSalir, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 326, 96, -1));

        BotonUltimo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ejercicioevaluable1/fast-forward-arrows.png"))); // NOI18N
        BotonUltimo.setVisible(false);
        getContentPane().add(BotonUltimo, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 280, -1, -1));

        BotonSiguiente.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ejercicioevaluable1/next.png"))); // NOI18N
        BotonSiguiente.setVisible(false);
        getContentPane().add(BotonSiguiente, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 280, -1, -1));

        BotonAnterior.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ejercicioevaluable1/back.png"))); // NOI18N
        BotonAnterior.setVisible(false);
        getContentPane().add(BotonAnterior, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 280, -1, -1));

        BotonPrimero.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ejercicioevaluable1/rewind-button.png"))); // NOI18N
        BotonPrimero.setVisible(false);
        getContentPane().add(BotonPrimero, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 280, -1, -1));

        jButtonMostrarFichero.setMnemonic('m');
        jButtonMostrarFichero.setText("Mostrar Ventas");
        jButtonMostrarFichero.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonMostrarFicheroActionPerformed(evt);
            }
        });
        getContentPane().add(jButtonMostrarFichero, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 330, -1, -1));

        jButtonGuardarFichero.setMnemonic('g');
        jButtonGuardarFichero.setText("Guardar Ventas");
        jButtonGuardarFichero.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonGuardarFicheroActionPerformed(evt);
            }
        });
        getContentPane().add(jButtonGuardarFichero, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 330, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public boolean validarNombre(String nombre) {
        if (nombre.matches("[ÁÉÍÓÚáéíóúça-zA-Z\\s]+") && nombre.length() < 15) {
            return true;
        } else {
            return false;
        }
    }

    public int[] recogerSeleccionados() {
        int[] seleccionados = new int[4];
        //PROCESADOR.
        if (jRadioButtonIntel.isSelected()) {
            seleccionados[0] = 0;
        } else if (jRadioButtonAmdR.isSelected()) {
            seleccionados[0] = 1;
        } else if (jRadioButtonAmdR2.isSelected()) {
            seleccionados[0] = 2;
        } else {
            seleccionados[0] = 3;
        }
        //MEMORIA
        if (jRadioButton8GB.isSelected()) {
            seleccionados[1] = 0;
        } else if (jRadioButton16GB.isSelected()) {
            seleccionados[1] = 1;
        } else if (jRadioButton32GB.isSelected()) {
            seleccionados[1] = 2;
        } else {
            seleccionados[1] = 3;
        }

        //MONITOR
        if (jRadioButton15.isSelected()) {
            seleccionados[2] = 0;
        } else if (jRadioButton17.isSelected()) {
            seleccionados[2] = 1;
        } else if (jRadioButton13.isSelected()) {
            seleccionados[2] = 2;
        } else {
            seleccionados[2] = 3;
        }

        //DISCO DURO
        if (jRadioButton1TB.isSelected()) {
            seleccionados[3] = 0;
        } else if (jRadioButton1TBSSD.isSelected()) {
            seleccionados[3] = 1;
        } else if (jRadioButton2TB.isSelected()) {
            seleccionados[3] = 2;
        } else {
            seleccionados[3] = 3;
        }

        return seleccionados;
    }

    private void jComboBoxLocalidadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxLocalidadActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBoxLocalidadActionPerformed

    private void jButtonAniadirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAniadirActionPerformed
        try {
            if (validarNombre(jTextFieldNombreCl.getText()) == false) {
                JOptionPane.showConfirmDialog(null, "No se puede guardar un nombre con esas características",
                        "Nombre Incorrecto", JOptionPane.ERROR_MESSAGE);
            } else {
                listaNombres.add(jTextFieldNombreCl.getText().trim());
                JListClientes.setListData(listaNombres);

                //SE AÑADE UN OBJETO VENTA.
                listaVentas.add(new Venta(jComboBoxLocalidad.getSelectedIndex(),
                        recogerSeleccionados()[0], recogerSeleccionados()[1], recogerSeleccionados()[3],
                        recogerSeleccionados()[3], jCheckBoxWin.isSelected(), jCheckBoxDvd.isSelected(),
                        jCheckBoxwifi.isSelected(), jCheckBoxback.isSelected()));
                /*
                 for (int i = 0; i < listaNombres.size(); i++) {
                 System.out.println(listaNombres.get(i));
                 }
                 System.out.println("---------------------------");

                 for (int i = 0; i < listaVentas.size(); i++) {
                 System.out.println(listaVentas.get(i).toString());
                 }*/

                jButtonAniadir.setEnabled(false);
                jButtonBuscar.setEnabled(false);
                jButtonEliminar.setEnabled(false);
                jRadioButton13.setEnabled(false);
                jRadioButton15.setEnabled(false);
                jRadioButton16GB.setEnabled(false);
                jRadioButton17.setEnabled(false);
                jRadioButton1TB.setEnabled(false);
                jRadioButton1TBSSD.setEnabled(false);
                jRadioButton24.setEnabled(false);
                jRadioButton24.setSelected(true);
                jRadioButton2TB.setEnabled(false);
                jRadioButton2TBSSD.setEnabled(false);
                jRadioButton2TBSSD.setSelected(true);
                jRadioButton32GB.setEnabled(false);
                jRadioButton64GB.setEnabled(false);
                jRadioButton64GB.setSelected(true);
                jRadioButton8GB.setEnabled(false);
                jRadioButtonAmdR.setEnabled(false);
                jRadioButtonAmdR.setSelected(true);
                jRadioButtonAmdR2.setEnabled(false);
                jRadioButtonAmdR3.setEnabled(false);
                jRadioButtonIntel.setEnabled(false);
                jComboBoxLocalidad.setEnabled(false);
                jCheckBoxDvd.setEnabled(false);
                jCheckBoxDvd.setSelected(true);
                jCheckBoxWin.setEnabled(false);
                jCheckBoxWin.setSelected(true);
                jCheckBoxback.setEnabled(false);
                jCheckBoxback.setSelected(false);
                jCheckBoxwifi.setEnabled(false);
                jCheckBoxwifi.setSelected(false);
                jTextFieldNombreCl.setText("");
                jTextFieldNombreCl.grabFocus();
                jComboBoxLocalidad.setSelectedIndex(0);
                BotonPrimero.setVisible(false);
                BotonUltimo.setVisible(false);
                BotonSiguiente.setVisible(false);
                BotonAnterior.setVisible(false);
            }
        } catch (Exception e) {

        }
    }//GEN-LAST:event_jButtonAniadirActionPerformed

    private void jButtonBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonBuscarActionPerformed
        try {
            if (validarNombre(jTextFieldNombreCl.getText()) == false) {
                JOptionPane.showConfirmDialog(null, "No se puede buscar un nombre con esas características",
                        "Nombre Incorrecto", JOptionPane.ERROR_MESSAGE);
            } else {
                encontrada = 0;
                ventasEncontradas.removeAll(listaVentas);
                for (int i = 0; i < listaNombres.size(); i++) {
                    if (jTextFieldNombreCl.getText().equals(listaNombres.get(i))) {
                        ventasEncontradas.add(listaVentas.get(i));
                        encontrada++;
                    }
                }
                //System.out.println(encontrada);

                if (encontrada == 0) {
                    JOptionPane.showMessageDialog(null, "No se ha localizado ningún cliente con ese nombre.", "Cliente no encontrado", JOptionPane.ERROR_MESSAGE);

                    jButtonAniadir.setEnabled(false);
                    jButtonBuscar.setEnabled(false);
                    jButtonEliminar.setEnabled(false);
                    jRadioButton13.setEnabled(false);
                    jRadioButton15.setEnabled(false);
                    jRadioButton16GB.setEnabled(false);
                    jRadioButton17.setEnabled(false);
                    jRadioButton1TB.setEnabled(false);
                    jRadioButton1TBSSD.setEnabled(false);
                    jRadioButton24.setEnabled(false);
                    jRadioButton24.setSelected(true);
                    jRadioButton2TB.setEnabled(false);
                    jRadioButton2TBSSD.setEnabled(false);
                    jRadioButton2TBSSD.setSelected(true);
                    jRadioButton32GB.setEnabled(false);
                    jRadioButton64GB.setEnabled(false);
                    jRadioButton64GB.setSelected(true);
                    jRadioButton8GB.setEnabled(false);
                    jRadioButtonAmdR.setEnabled(false);
                    jRadioButtonAmdR.setSelected(true);
                    jRadioButtonAmdR2.setEnabled(false);
                    jRadioButtonAmdR3.setEnabled(false);
                    jRadioButtonIntel.setEnabled(false);
                    jComboBoxLocalidad.setEnabled(false);
                    jCheckBoxDvd.setEnabled(false);
                    jCheckBoxDvd.setSelected(true);
                    jCheckBoxWin.setEnabled(false);
                    jCheckBoxWin.setSelected(true);
                    jCheckBoxback.setEnabled(false);
                    jCheckBoxback.setSelected(false);
                    jCheckBoxwifi.setEnabled(false);
                    jCheckBoxwifi.setSelected(false);
                    jTextFieldNombreCl.setText("");
                    jTextFieldNombreCl.grabFocus();
                    jComboBoxLocalidad.setSelectedIndex(0);
                    BotonPrimero.setVisible(false);
                    BotonUltimo.setVisible(false);
                    BotonSiguiente.setVisible(false);
                    BotonAnterior.setVisible(false);

                } else {
                    jButtonAniadir.setEnabled(false);
                    jButtonBuscar.setEnabled(false);
                    jButtonEliminar.setEnabled(false);
                    jRadioButton13.setEnabled(false);
                    jRadioButton15.setEnabled(false);
                    jRadioButton16GB.setEnabled(false);
                    jRadioButton17.setEnabled(false);
                    jRadioButton1TB.setEnabled(false);
                    jRadioButton1TBSSD.setEnabled(false);
                    jRadioButton24.setEnabled(false);
                    jRadioButton24.setSelected(true);
                    jRadioButton2TB.setEnabled(false);
                    jRadioButton2TBSSD.setEnabled(false);
                    jRadioButton2TBSSD.setSelected(true);
                    jRadioButton32GB.setEnabled(false);
                    jRadioButton64GB.setEnabled(false);
                    jRadioButton64GB.setSelected(true);
                    jRadioButton8GB.setEnabled(false);
                    jRadioButtonAmdR.setEnabled(false);
                    jRadioButtonAmdR.setSelected(true);
                    jRadioButtonAmdR2.setEnabled(false);
                    jRadioButtonAmdR3.setEnabled(false);
                    jRadioButtonIntel.setEnabled(false);
                    jComboBoxLocalidad.setEnabled(false);
                    jCheckBoxDvd.setEnabled(false);
                    jCheckBoxDvd.setSelected(true);
                    jCheckBoxWin.setEnabled(false);
                    jCheckBoxWin.setSelected(true);
                    jCheckBoxback.setEnabled(false);
                    jCheckBoxback.setSelected(false);
                    jCheckBoxwifi.setEnabled(false);
                    jCheckBoxwifi.setSelected(false);
                    jTextFieldNombreCl.setText("");
                    jTextFieldNombreCl.grabFocus();
                    jComboBoxLocalidad.setSelectedIndex(0);
                    BotonPrimero.setVisible(false);
                    BotonUltimo.setVisible(false);
                    BotonSiguiente.setVisible(false);
                    BotonAnterior.setVisible(false);

                    if (encontrada == 1) {
                        mostrarEncontrada(0);
                    } else {
                        mostrarEncontrada(0);
                        for (int i = 1; i < ventasEncontradas.size(); i++) {
                        //System.out.println("indice: " + i);
                            //System.out.println("lista encontradas long: " + ventasEncontradas.size());
                            //System.out.println(ventasEncontradas.get(i));
                            if (i < ventasEncontradas.size()) {
                                int res = JOptionPane.showConfirmDialog(null, "Se ha encontrado mas de un cliente con el mismo nombre.\n"
                                        + "¿Desea visualizar las demás compras?", "Múltiples Clientes",
                                        JOptionPane.YES_NO_CANCEL_OPTION);
                                if (res == 0) {//SI
                                    mostrarEncontrada(i);
                                }
                            } else {
                                mostrarEncontrada(i);
                            }
                        }
                    }
                }
            }
        } catch (Exception e) {

        }
    }//GEN-LAST:event_jButtonBuscarActionPerformed

    private void mostrarEncontrada(int i) {
        try {
            //LOCALIDAD
            jComboBoxLocalidad.setSelectedIndex(ventasEncontradas.get(i).getLocalidad());
            //SWITCH PROCESADOR
            switch (ventasEncontradas.get(i).getProcesador()) {
                case 0:
                    jRadioButtonIntel.setSelected(true);
                    break;
                case 1:
                    jRadioButtonAmdR.setSelected(true);
                    break;
                case 2:
                    jRadioButtonAmdR2.setSelected(true);
                    break;
                case 3:
                    jRadioButtonAmdR3.setSelected(true);
                    break;
            }
            //SWITCH MEMORIA
            switch (ventasEncontradas.get(i).getMemoria()) {
                case 0:
                    jRadioButton8GB.setSelected(true);
                    break;
                case 1:
                    jRadioButton16GB.setSelected(true);
                    break;
                case 2:
                    jRadioButton32GB.setSelected(true);
                    break;
                case 3:
                    jRadioButton64GB.setSelected(true);
                    break;
            }
            //SWITCH MONITOR
            switch (ventasEncontradas.get(i).getMonitor()) {
                case 0:
                    jRadioButton15.setSelected(true);
                    break;
                case 1:
                    jRadioButton17.setSelected(true);
                    break;
                case 2:
                    jRadioButton13.setSelected(true);
                    break;
                case 3:
                    jRadioButton24.setSelected(true);
                    break;
            }
            // SWITCH DISCO DURO
            switch (ventasEncontradas.get(i).getDiscoDuro()) {
                case 0:
                    jRadioButton1TB.setSelected(true);
                    break;
                case 1:
                    jRadioButton1TBSSD.setSelected(true);
                    break;
                case 2:
                    jRadioButton2TB.setSelected(true);
                    break;
                case 3:
                    jRadioButton2TBSSD.setSelected(true);
                    break;
            }
            //IF WINDOWS 10
            if (ventasEncontradas.get(i).isWindows10()) {
                jCheckBoxWin.setSelected(true);
            } else {
                jCheckBoxWin.setSelected(false);
            }
            //IF LECTOR DVD
            if (ventasEncontradas.get(i).isLectorDvd()) {
                jCheckBoxDvd.setSelected(true);
            } else {
                jCheckBoxDvd.setSelected(false);
            }
            //IF WIFI
            if (ventasEncontradas.get(i).isWifi()) {
                jCheckBoxwifi.setSelected(true);
            } else {
                jCheckBoxwifi.setSelected(false);
            }
            //IF BACKUP RESTORE
            if (ventasEncontradas.get(i).isBackupRestore()) {
                jCheckBoxback.setSelected(true);
            } else {
                jCheckBoxback.setSelected(false);
            }
        } catch (Exception e) {

        }
    }

    private void jButtonEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEliminarActionPerformed
        try {
            if (validarNombre(jTextFieldNombreCl.getText()) == false) {
                JOptionPane.showConfirmDialog(null, "No se puede eliminar un nombre con esas características",
                        "Nombre Incorrecto", JOptionPane.ERROR_MESSAGE);
            } else {
                for (int i = 0; i < listaNombres.size(); i++) {
                    if (jTextFieldNombreCl.getText().equals(listaNombres.get(i))) {
                        int res = JOptionPane.showConfirmDialog(null, "¿Desea eliminar al siguiente cliente?\n"
                                + listaNombres.get(i), "Eliminar Cliente",
                                JOptionPane.YES_NO_CANCEL_OPTION);
                        if (res == 0) {//SI
                            listaNombres.remove(i);
                            JListClientes.setListData(listaNombres);
                            listaVentas.remove(i);
                        }

                        jButtonAniadir.setEnabled(false);
                        jButtonBuscar.setEnabled(false);
                        jButtonEliminar.setEnabled(false);
                        jRadioButton13.setEnabled(false);
                        jRadioButton15.setEnabled(false);
                        jRadioButton16GB.setEnabled(false);
                        jRadioButton17.setEnabled(false);
                        jRadioButton1TB.setEnabled(false);
                        jRadioButton1TBSSD.setEnabled(false);
                        jRadioButton24.setEnabled(false);
                        jRadioButton24.setSelected(true);
                        jRadioButton2TB.setEnabled(false);
                        jRadioButton2TBSSD.setEnabled(false);
                        jRadioButton2TBSSD.setSelected(true);
                        jRadioButton32GB.setEnabled(false);
                        jRadioButton64GB.setEnabled(false);
                        jRadioButton64GB.setSelected(true);
                        jRadioButton8GB.setEnabled(false);
                        jRadioButtonAmdR.setEnabled(false);
                        jRadioButtonAmdR.setSelected(true);
                        jRadioButtonAmdR2.setEnabled(false);
                        jRadioButtonAmdR3.setEnabled(false);
                        jRadioButtonIntel.setEnabled(false);
                        jComboBoxLocalidad.setEnabled(false);
                        jCheckBoxDvd.setEnabled(false);
                        jCheckBoxDvd.setSelected(true);
                        jCheckBoxWin.setEnabled(false);
                        jCheckBoxWin.setSelected(true);
                        jCheckBoxback.setEnabled(false);
                        jCheckBoxback.setSelected(false);
                        jCheckBoxwifi.setEnabled(false);
                        jCheckBoxwifi.setSelected(false);
                        jTextFieldNombreCl.grabFocus();
                        jButtonEliminar.setEnabled(false);
                        jComboBoxLocalidad.setSelectedIndex(0);
                        BotonPrimero.setVisible(false);
                        BotonUltimo.setVisible(false);
                        BotonSiguiente.setVisible(false);
                        BotonAnterior.setVisible(false);
                        jTextFieldNombreCl.setText("");
                        break;
                    }
                }
            }
        } catch (Exception e) {

        }
    }//GEN-LAST:event_jButtonEliminarActionPerformed

    private void jButtonCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCancelarActionPerformed
        try {
            jButtonAniadir.setEnabled(false);
            jButtonBuscar.setEnabled(false);
            jButtonEliminar.setEnabled(false);
            jRadioButton13.setEnabled(false);
            jRadioButton15.setEnabled(false);
            jRadioButton16GB.setEnabled(false);
            jRadioButton17.setEnabled(false);
            jRadioButton1TB.setEnabled(false);
            jRadioButton1TBSSD.setEnabled(false);
            jRadioButton24.setEnabled(false);
            jRadioButton24.setSelected(true);
            jRadioButton2TB.setEnabled(false);
            jRadioButton2TBSSD.setEnabled(false);
            jRadioButton2TBSSD.setSelected(true);
            jRadioButton32GB.setEnabled(false);
            jRadioButton64GB.setEnabled(false);
            jRadioButton64GB.setSelected(true);
            jRadioButton8GB.setEnabled(false);
            jRadioButtonAmdR.setEnabled(false);
            jRadioButtonAmdR.setSelected(true);
            jRadioButtonAmdR2.setEnabled(false);
            jRadioButtonAmdR3.setEnabled(false);
            jRadioButtonIntel.setEnabled(false);
            jComboBoxLocalidad.setEnabled(false);
            jCheckBoxDvd.setEnabled(false);
            jCheckBoxDvd.setSelected(true);
            jCheckBoxWin.setEnabled(false);
            jCheckBoxWin.setSelected(true);
            jCheckBoxback.setEnabled(false);
            jCheckBoxback.setSelected(false);
            jCheckBoxwifi.setEnabled(false);
            jCheckBoxwifi.setSelected(false);
            jTextFieldNombreCl.grabFocus();
            jButtonEliminar.setEnabled(false);
            jComboBoxLocalidad.setSelectedIndex(0);
            BotonPrimero.setVisible(false);
            BotonUltimo.setVisible(false);
            BotonSiguiente.setVisible(false);
            BotonAnterior.setVisible(false);
            jTextFieldNombreCl.setText("");
            JListClientes.clearSelection();
        } catch (Exception e) {

        }
    }//GEN-LAST:event_jButtonCancelarActionPerformed

    private void jButtonSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSalirActionPerformed
        System.exit(0);
    }//GEN-LAST:event_jButtonSalirActionPerformed

    private void jTextFieldNombreClKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldNombreClKeyPressed
        try {
            if (evt.getKeyCode() == evt.VK_ENTER) {
                if (validarNombre(jTextFieldNombreCl.getText())) {
                    jButtonAniadir.setEnabled(true);
                    jButtonBuscar.setEnabled(true);
                    jButtonEliminar.setEnabled(false);
                    jRadioButton13.setEnabled(true);
                    jRadioButton15.setEnabled(true);
                    jRadioButton16GB.setEnabled(true);
                    jRadioButton17.setEnabled(true);
                    jRadioButton1TB.setEnabled(true);
                    jRadioButton1TBSSD.setEnabled(true);
                    jRadioButton24.setEnabled(true);
                    jRadioButton2TB.setEnabled(true);
                    jRadioButton2TBSSD.setEnabled(true);
                    jRadioButton32GB.setEnabled(true);
                    jRadioButton64GB.setEnabled(true);
                    jRadioButton8GB.setEnabled(true);
                    jRadioButtonAmdR.setEnabled(true);
                    jRadioButtonAmdR2.setEnabled(true);
                    jRadioButtonAmdR3.setEnabled(true);
                    jRadioButtonIntel.setEnabled(true);
                    jComboBoxLocalidad.setEnabled(true);
                    jCheckBoxDvd.setEnabled(true);
                    jCheckBoxWin.setEnabled(true);
                    jCheckBoxback.setEnabled(true);
                    jCheckBoxwifi.setEnabled(true);
                    jComboBoxLocalidad.grabFocus();
                    BotonPrimero.setVisible(false);
                    BotonUltimo.setVisible(false);
                    BotonSiguiente.setVisible(false);
                    BotonAnterior.setVisible(false);
                } else {
                    JOptionPane.showMessageDialog(null, "No se puede introducir un nombre con esas características",
                            "Nombre Incorrecto", JOptionPane.ERROR_MESSAGE);
                }
            }
        } catch (Exception e) {

        }
    }//GEN-LAST:event_jTextFieldNombreClKeyPressed

    private void JListClientesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_JListClientesMouseClicked
        try {
            jButtonEliminar.setEnabled(true);
            jButtonAniadir.setEnabled(false);
            jButtonBuscar.setEnabled(false);
            int i = JListClientes.getSelectedIndex();
            jTextFieldNombreCl.setText((String) listaNombres.get(i));
            jComboBoxLocalidad.setSelectedIndex(listaVentas.get(i).getLocalidad());
            //SWITCH PROCESADOR
            switch (listaVentas.get(i).getProcesador()) {
                case 0:
                    jRadioButtonIntel.setSelected(true);
                    break;
                case 1:
                    jRadioButtonAmdR.setSelected(true);
                    break;
                case 2:
                    jRadioButtonAmdR2.setSelected(true);
                    break;
                case 3:
                    jRadioButtonAmdR3.setSelected(true);
                    break;
            }
            //SWITCH MEMORIA
            switch (listaVentas.get(i).getMemoria()) {
                case 0:
                    jRadioButton8GB.setSelected(true);
                    break;
                case 1:
                    jRadioButton16GB.setSelected(true);
                    break;
                case 2:
                    jRadioButton32GB.setSelected(true);
                    break;
                case 3:
                    jRadioButton64GB.setSelected(true);
                    break;
            }
            //SWITCH MONITOR
            switch (listaVentas.get(i).getMonitor()) {
                case 0:
                    jRadioButton15.setSelected(true);
                    break;
                case 1:
                    jRadioButton17.setSelected(true);
                    break;
                case 2:
                    jRadioButton13.setSelected(true);
                    break;
                case 3:
                    jRadioButton24.setSelected(true);
                    break;
            }
            // SWITCH DISCO DURO
            switch (listaVentas.get(i).getDiscoDuro()) {
                case 0:
                    jRadioButton1TB.setSelected(true);
                    break;
                case 1:
                    jRadioButton1TBSSD.setSelected(true);
                    break;
                case 2:
                    jRadioButton2TB.setSelected(true);
                    break;
                case 3:
                    jRadioButton2TBSSD.setSelected(true);
                    break;
            }
            //IF WINDOWS 10
            if (listaVentas.get(i).isWindows10()) {
                jCheckBoxWin.setSelected(true);
            } else {
                jCheckBoxWin.setSelected(false);
            }
            //IF LECTOR DVD
            if (listaVentas.get(i).isLectorDvd()) {
                jCheckBoxDvd.setSelected(true);
            } else {
                jCheckBoxDvd.setSelected(false);
            }
            //IF WIFI
            if (listaVentas.get(i).isWifi()) {
                jCheckBoxwifi.setSelected(true);
            } else {
                jCheckBoxwifi.setSelected(false);
            }
            //IF BACKUP RESTORE
            if (listaVentas.get(i).isBackupRestore()) {
                jCheckBoxback.setSelected(true);
            } else {
                jCheckBoxback.setSelected(false);
            }
        } catch (Exception e) {

        }

    }//GEN-LAST:event_JListClientesMouseClicked

    private void JListClientesKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_JListClientesKeyReleased
        try {
            jButtonEliminar.setEnabled(true);
            jButtonAniadir.setEnabled(false);
            jButtonBuscar.setEnabled(false);
            int i = JListClientes.getSelectedIndex();
            jTextFieldNombreCl.setText((String) listaNombres.get(i));
            jComboBoxLocalidad.setSelectedIndex(listaVentas.get(i).getLocalidad());
            //SWITCH PROCESADOR
            switch (listaVentas.get(i).getProcesador()) {
                case 0:
                    jRadioButtonIntel.setSelected(true);
                    break;
                case 1:
                    jRadioButtonAmdR.setSelected(true);
                    break;
                case 2:
                    jRadioButtonAmdR2.setSelected(true);
                    break;
                case 3:
                    jRadioButtonAmdR3.setSelected(true);
                    break;
            }
            //SWITCH MEMORIA
            switch (listaVentas.get(i).getMemoria()) {
                case 0:
                    jRadioButton8GB.setSelected(true);
                    break;
                case 1:
                    jRadioButton16GB.setSelected(true);
                    break;
                case 2:
                    jRadioButton32GB.setSelected(true);
                    break;
                case 3:
                    jRadioButton64GB.setSelected(true);
                    break;
            }
            //SWITCH MONITOR
            switch (listaVentas.get(i).getMonitor()) {
                case 0:
                    jRadioButton15.setSelected(true);
                    break;
                case 1:
                    jRadioButton17.setSelected(true);
                    break;
                case 2:
                    jRadioButton13.setSelected(true);
                    break;
                case 3:
                    jRadioButton24.setSelected(true);
                    break;
            }
            // SWITCH DISCO DURO
            switch (listaVentas.get(i).getDiscoDuro()) {
                case 0:
                    jRadioButton1TB.setSelected(true);
                    break;
                case 1:
                    jRadioButton1TBSSD.setSelected(true);
                    break;
                case 2:
                    jRadioButton2TB.setSelected(true);
                    break;
                case 3:
                    jRadioButton2TBSSD.setSelected(true);
                    break;
            }
            //IF WINDOWS 10
            if (listaVentas.get(i).isWindows10()) {
                jCheckBoxWin.setSelected(true);
            } else {
                jCheckBoxWin.setSelected(false);
            }
            //IF LECTOR DVD
            if (listaVentas.get(i).isLectorDvd()) {
                jCheckBoxDvd.setSelected(true);
            } else {
                jCheckBoxDvd.setSelected(false);
            }
            //IF WIFI
            if (listaVentas.get(i).isWifi()) {
                jCheckBoxwifi.setSelected(true);
            } else {
                jCheckBoxwifi.setSelected(false);
            }
            //IF BACKUP RESTORE
            if (listaVentas.get(i).isBackupRestore()) {
                jCheckBoxback.setSelected(true);
            } else {
                jCheckBoxback.setSelected(false);
            }
        } catch (Exception e) {

        }
    }//GEN-LAST:event_JListClientesKeyReleased

    private void JListClientesFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_JListClientesFocusGained
        try {
            JListClientes.setSelectedIndex(0);
            jTextFieldNombreCl.setText((String) listaNombres.get(0));
            jComboBoxLocalidad.setSelectedIndex(listaVentas.get(0).getLocalidad());
            //SWITCH PROCESADOR
            switch (listaVentas.get(0).getProcesador()) {
                case 0:
                    jRadioButtonIntel.setSelected(true);
                    break;
                case 1:
                    jRadioButtonAmdR.setSelected(true);
                    break;
                case 2:
                    jRadioButtonAmdR2.setSelected(true);
                    break;
                case 3:
                    jRadioButtonAmdR3.setSelected(true);
                    break;
            }
            //SWITCH MEMORIA
            switch (listaVentas.get(0).getMemoria()) {
                case 0:
                    jRadioButton8GB.setSelected(true);
                    break;
                case 1:
                    jRadioButton16GB.setSelected(true);
                    break;
                case 2:
                    jRadioButton32GB.setSelected(true);
                    break;
                case 3:
                    jRadioButton64GB.setSelected(true);
                    break;
            }
            //SWITCH MONITOR
            switch (listaVentas.get(0).getMonitor()) {
                case 0:
                    jRadioButton15.setSelected(true);
                    break;
                case 1:
                    jRadioButton17.setSelected(true);
                    break;
                case 2:
                    jRadioButton13.setSelected(true);
                    break;
                case 3:
                    jRadioButton24.setSelected(true);
                    break;
            }
            // SWITCH DISCO DURO
            switch (listaVentas.get(0).getDiscoDuro()) {
                case 0:
                    jRadioButton1TB.setSelected(true);
                    break;
                case 1:
                    jRadioButton1TBSSD.setSelected(true);
                    break;
                case 2:
                    jRadioButton2TB.setSelected(true);
                    break;
                case 3:
                    jRadioButton2TBSSD.setSelected(true);
                    break;
            }
            //IF WINDOWS 10
            if (listaVentas.get(0).isWindows10()) {
                jCheckBoxWin.setSelected(true);
            } else {
                jCheckBoxWin.setSelected(false);
            }
            //IF LECTOR DVD
            if (listaVentas.get(0).isLectorDvd()) {
                jCheckBoxDvd.setSelected(true);
            } else {
                jCheckBoxDvd.setSelected(false);
            }
            //IF WIFI
            if (listaVentas.get(0).isWifi()) {
                jCheckBoxwifi.setSelected(true);
            } else {
                jCheckBoxwifi.setSelected(false);
            }
            //IF BACKUP RESTORE
            if (listaVentas.get(0).isBackupRestore()) {
                jCheckBoxback.setSelected(true);
            } else {
                jCheckBoxback.setSelected(false);
            }

        } catch (Exception e) {

        }
    }//GEN-LAST:event_JListClientesFocusGained

    private void jButtonGuardarFicheroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonGuardarFicheroActionPerformed
        if(listaVentas.size() == 0){//si no hay ventas que guardar.
            JOptionPane.showMessageDialog(null, "No hay información que guardar",
                        "Falta Información", JOptionPane.ERROR_MESSAGE);
        }else{
            System.out.println("*******************ArrayVentas*********************");
            for(int i=0; i<listaVentas.size(); i++){
                System.out.println(listaNombres.get(i) + " -> " + listaVentas.get(i));
            }
            System.out.println("****************************************************");
            
            OperacionesFicheros.guardarVentasEnFichero(fichero, listaVentas, listaNombres);
            OperacionesFicheros.guardarContenidoFicheroEnArrays(fichero);
            listaVentas.removeAll(listaVentas);
            listaNombres.removeAll(listaNombres);
            try {
                jButtonAniadir.setEnabled(false);
                jButtonBuscar.setEnabled(false);
                jButtonEliminar.setEnabled(false);
                jRadioButton13.setEnabled(false);
                jRadioButton15.setEnabled(false);
                jRadioButton16GB.setEnabled(false);
                jRadioButton17.setEnabled(false);
                jRadioButton1TB.setEnabled(false);
                jRadioButton1TBSSD.setEnabled(false);
                jRadioButton24.setEnabled(false);
                jRadioButton24.setSelected(true);
                jRadioButton2TB.setEnabled(false);
                jRadioButton2TBSSD.setEnabled(false);
                jRadioButton2TBSSD.setSelected(true);
                jRadioButton32GB.setEnabled(false);
                jRadioButton64GB.setEnabled(false);
                jRadioButton64GB.setSelected(true);
                jRadioButton8GB.setEnabled(false);
                jRadioButtonAmdR.setEnabled(false);
                jRadioButtonAmdR.setSelected(true);
                jRadioButtonAmdR2.setEnabled(false);
                jRadioButtonAmdR3.setEnabled(false);
                jRadioButtonIntel.setEnabled(false);
                jComboBoxLocalidad.setEnabled(false);
                jCheckBoxDvd.setEnabled(false);
                jCheckBoxDvd.setSelected(true);
                jCheckBoxWin.setEnabled(false);
                jCheckBoxWin.setSelected(true);
                jCheckBoxback.setEnabled(false);
                jCheckBoxback.setSelected(false);
                jCheckBoxwifi.setEnabled(false);
                jCheckBoxwifi.setSelected(false);
                jTextFieldNombreCl.grabFocus();
                jButtonEliminar.setEnabled(false);
                jComboBoxLocalidad.setSelectedIndex(0);
                BotonPrimero.setVisible(false);
                BotonUltimo.setVisible(false);
                BotonSiguiente.setVisible(false);
                BotonAnterior.setVisible(false);
                jTextFieldNombreCl.setText("");
                JListClientes.clearSelection();
                JListClientes.setListData(listaNombres);
            } catch (Exception e) {}
        }
    }//GEN-LAST:event_jButtonGuardarFicheroActionPerformed

    private void jButtonMostrarFicheroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonMostrarFicheroActionPerformed
       /*OperacionesFicheros.leerFicheroVentas(fichero);
       listaVentas = OperacionesFicheros.getVentas();
       listaNombres = OperacionesFicheros.getNombres();
       
       mostrarEncontradasFichero(0);
        for (int i = 1; i < listaVentas.size(); i++) {
            if (i < listaVentas.size()) {
                int res = JOptionPane.showConfirmDialog(null, "Se ha encontrado mas de una venta, \n"
                        + "¿Desea visualizar las demás ventas?", "Múltiples Clientes",
                        JOptionPane.YES_NO_CANCEL_OPTION);
                if (res == 0) {//SI
                    mostrarEncontradasFichero(i);
                    JListClientes.setListData(listaNombres);
                }
            } else {
                mostrarEncontradasFichero(i);
            }
        }*/

    }//GEN-LAST:event_jButtonMostrarFicheroActionPerformed

    private void mostrarEncontradasFichero(ArrayList<Venta> ArrayLVentas, int i){
        /*try {
            //NOMBRE
            jTextFieldNombreCl.setText((String) listaNombres.get(i));
            //LOCALIDAD
            jComboBoxLocalidad.setSelectedIndex(listaVentas.get(i).getLocalidad());
            //SWITCH PROCESADOR
            switch (listaVentas.get(i).getProcesador()) {
                case 0:
                    jRadioButtonIntel.setSelected(true);
                    break;
                case 1:
                    jRadioButtonAmdR.setSelected(true);
                    break;
                case 2:
                    jRadioButtonAmdR2.setSelected(true);
                    break;
                case 3:
                    jRadioButtonAmdR3.setSelected(true);
                    break;
            }
            //SWITCH MEMORIA
            switch (listaVentas.get(i).getMemoria()) {
                case 0:
                    jRadioButton8GB.setSelected(true);
                    break;
                case 1:
                    jRadioButton16GB.setSelected(true);
                    break;
                case 2:
                    jRadioButton32GB.setSelected(true);
                    break;
                case 3:
                    jRadioButton64GB.setSelected(true);
                    break;
            }
            //SWITCH MONITOR
            switch (listaVentas.get(i).getMonitor()) {
                case 0:
                    jRadioButton15.setSelected(true);
                    break;
                case 1:
                    jRadioButton17.setSelected(true);
                    break;
                case 2:
                    jRadioButton13.setSelected(true);
                    break;
                case 3:
                    jRadioButton24.setSelected(true);
                    break;
            }
            // SWITCH DISCO DURO
            switch (listaVentas.get(i).getDiscoDuro()) {
                case 0:
                    jRadioButton1TB.setSelected(true);
                    break;
                case 1:
                    jRadioButton1TBSSD.setSelected(true);
                    break;
                case 2:
                    jRadioButton2TB.setSelected(true);
                    break;
                case 3:
                    jRadioButton2TBSSD.setSelected(true);
                    break;
            }
            //IF WINDOWS 10
            if (listaVentas.get(i).isWindows10()) {
                jCheckBoxWin.setSelected(true);
            } else {
                jCheckBoxWin.setSelected(false);
            }
            //IF LECTOR DVD
            if (listaVentas.get(i).isLectorDvd()) {
                jCheckBoxDvd.setSelected(true);
            } else {
                jCheckBoxDvd.setSelected(false);
            }
            //IF WIFI
            if (listaVentas.get(i).isWifi()) {
                jCheckBoxwifi.setSelected(true);
            } else {
                jCheckBoxwifi.setSelected(false);
            }
            //IF BACKUP RESTORE
            if (listaVentas.get(i).isBackupRestore()) {
                jCheckBoxback.setSelected(true);
            } else {
                jCheckBoxback.setSelected(false);
            }
        } catch (Exception e) {

        }*/
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Interfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Interfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Interfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Interfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Interfaz().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BotonAnterior;
    private javax.swing.JButton BotonPrimero;
    private javax.swing.JButton BotonSiguiente;
    private javax.swing.JButton BotonUltimo;
    private javax.swing.JList JListClientes;
    private javax.swing.ButtonGroup buttonGroupDisco;
    private javax.swing.ButtonGroup buttonGroupMemoria;
    private javax.swing.ButtonGroup buttonGroupMonitor;
    private javax.swing.ButtonGroup buttonGroupProcesador;
    private javax.swing.JButton jButtonAniadir;
    private javax.swing.JButton jButtonBuscar;
    private javax.swing.JButton jButtonCancelar;
    private javax.swing.JButton jButtonEliminar;
    private javax.swing.JButton jButtonGuardarFichero;
    private javax.swing.JButton jButtonMostrarFichero;
    private javax.swing.JButton jButtonSalir;
    private javax.swing.JCheckBox jCheckBoxDvd;
    private javax.swing.JCheckBox jCheckBoxWin;
    private javax.swing.JCheckBox jCheckBoxback;
    private javax.swing.JCheckBox jCheckBoxwifi;
    private javax.swing.JComboBox jComboBoxLocalidad;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabelListaCl;
    private javax.swing.JLabel jLabelLocalidad;
    private javax.swing.JLabel jLabelNombreCl;
    private javax.swing.JLabel jLabelProcesador;
    private javax.swing.JRadioButton jRadioButton13;
    private javax.swing.JRadioButton jRadioButton15;
    private javax.swing.JRadioButton jRadioButton16GB;
    private javax.swing.JRadioButton jRadioButton17;
    private javax.swing.JRadioButton jRadioButton1TB;
    private javax.swing.JRadioButton jRadioButton1TBSSD;
    private javax.swing.JRadioButton jRadioButton24;
    private javax.swing.JRadioButton jRadioButton2TB;
    private javax.swing.JRadioButton jRadioButton2TBSSD;
    private javax.swing.JRadioButton jRadioButton32GB;
    private javax.swing.JRadioButton jRadioButton64GB;
    private javax.swing.JRadioButton jRadioButton8GB;
    private javax.swing.JRadioButton jRadioButtonAmdR;
    private javax.swing.JRadioButton jRadioButtonAmdR2;
    private javax.swing.JRadioButton jRadioButtonAmdR3;
    private javax.swing.JRadioButton jRadioButtonIntel;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextFieldNombreCl;
    // End of variables declaration//GEN-END:variables
}
